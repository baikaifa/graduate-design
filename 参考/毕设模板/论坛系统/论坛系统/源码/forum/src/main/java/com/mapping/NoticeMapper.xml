<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.NoticeMapper" >
  <resultMap id="BaseResultMap" type="com.model.Notice" >
    <id column="notice_id" property="noticeId" jdbcType="INTEGER" />
    <result column="notice_topic" property="noticeTopic" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="notice_pubTime" property="noticePubtime" jdbcType="TIMESTAMP" />
    <result column="notice_state" property="noticeState" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.model.Notice" extends="BaseResultMap" >
    <result column="notice_content" property="noticeContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    notice_id, notice_topic, user_id, notice_pubTime, notice_state
  </sql>
  <sql id="Blob_Column_List" >
    notice_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_notice
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </select>
  
  <select id="getNoticeList" resultMap="ResultMapWithBLOBs" parameterType="com.model.Notice" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_notice
   
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_notice
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </delete>
  <!-- <insert id="insert" parameterType="com.model.Notice" >
    insert into tb_notice (notice_id, notice_topic, user_id, 
      notice_pubTime, notice_state, notice_content
      )
    values (#{noticeId,jdbcType=INTEGER}, #{noticeTopic,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{noticePubtime,jdbcType=TIMESTAMP}, #{noticeState,jdbcType=VARCHAR}, #{noticeContent,jdbcType=LONGVARCHAR}
      )
  </insert>
   -->
   <insert id="insert" parameterType="com.model.Notice" >
    insert into tb_notice ( notice_topic, user_id, 
       notice_content
      )
    values ( #{noticeTopic,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
       #{noticeContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.Notice" >
    insert into tb_notice
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="noticeId != null" >
        notice_id,
      </if>
      <if test="noticeTopic != null" >
        notice_topic,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="noticePubtime != null" >
        notice_pubTime,
      </if>
      <if test="noticeState != null" >
        notice_state,
      </if>
      <if test="noticeContent != null" >
        notice_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="noticeId != null" >
        #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="noticeTopic != null" >
        #{noticeTopic,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="noticePubtime != null" >
        #{noticePubtime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeState != null" >
        #{noticeState,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null" >
        #{noticeContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Notice" >
    update tb_notice
    <set >
      <if test="noticeTopic != null" >
        notice_topic = #{noticeTopic,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="noticePubtime != null" >
        notice_pubTime = #{noticePubtime,jdbcType=TIMESTAMP},
      </if>
      <if test="noticeState != null" >
        notice_state = #{noticeState,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null" >
        notice_content = #{noticeContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.model.Notice" >
    update tb_notice
    set notice_topic = #{noticeTopic,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
     
      notice_state = #{noticeState,jdbcType=VARCHAR},
      notice_content = #{noticeContent,jdbcType=LONGVARCHAR}
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Notice" >
    update tb_notice
    set notice_topic = #{noticeTopic,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      notice_pubTime = #{noticePubtime,jdbcType=TIMESTAMP},
      notice_state = #{noticeState,jdbcType=VARCHAR}
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </update>
  
  <update id="pubNotice" parameterType="com.model.Notice" >
    update tb_notice
    set notice_state ='已发布'
      
    where notice_id = #{noticeId,jdbcType=INTEGER}
  </update>
</mapper>